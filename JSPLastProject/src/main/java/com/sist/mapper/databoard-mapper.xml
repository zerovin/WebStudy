<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.databoard-mapper">
	<!-- 
		<sql> : SQL문장의 중복 제거 => <include>
		<select id="" resultType="" parameterType="" resultMap=""> : 
		<insert id="" parameterType=""> => <selectKey> : 자동증가번호
		<update id="" parameterType="">
		<delete id="" parameterType="">
		=> id : 구분자
		=> id 중복 금지
		=> resultType="" : 결과값 SQL에서 받은 값 담는 변수 데이터형
		=> parameterType="" : 매개변수 데이터형
		=> resultMap="" 컬럼명/VO변수명이 서로 다른 경우 => 실무(보안)
		   ex) 컬럼명 - board_no board_name board_subject... => setBoard_no()
		       VO - no name subject => setNo()
		   <resultMap id="" type="BoardVO">
		      <result column="board_no" property="no" /> => 컬럼명, VO변수명 매칭
		   </resultMap> => JOIN에서 필수사용 => vo.getDvo().setName 
		
		javascript - jsp:include했을 때 아이디 중복 주의
		
		#{} / ${} 구분
		JOIN / SUBQUERY
	 -->
	 
	 <!-- 
	 	mybatis - Config.xml 세팅은 이미 설정
	 	          mapper.xml
	 	          1. CRUD : INSERT / UPDATE / DELETE / SELECT
	 	          2. JOIN
	 	          3. 동적 쿼리 => 검색
	 	Spring - xml 사용X => Annotation
	  -->
	  
	 <!-- 추가 -->
	 <insert id="databoardInsert" parameterType="DataBoardVO">
	 	INSERT INTO project_databoard VALUES(
	 		(SELECT NVL(MAX(no)+1,1) FROM project_databoard),
	 		#{name}, #{subject}, #{content}, #{pwd}, SYSDATE, 0, #{filename}, #{filesize}
	 	)
	 	
	 </insert>
	 
	 <!-- 목록 -->
	 <select id="databoardListData" parameterType="hashmap" resultType="DataBoardVO">
	 	SELECT no, subject, name, TO_CHAR(regdate, 'YYYY-MM-DD') as dbday, hit, num 
 		FROM (SELECT no, subject, name, regdate, hit, rownum as num 
 		FROM (SELECT /*+ INDEX_DESC(project_databoard pd_no_pk)*/no, subject, name, regdate, hit 
 		FROM project_databoard))
 		WHERE num BETWEEN #{start} AND #{end}
	 </select>
	 <select id="databoardRowCount" resultType="int">
	 	SELECT COUNT(*) FROM project_databoard
	 </select>
	 
	 <!-- 상세 -->
	 <update id="databoardHitIncrement" parameterType="int">
	 	UPDATE project_databoard SET
	 	hit=hit+1
	 	WHERE no=#{no}
	 </update>
	 <select id="databoardDetailData" resultType="dataBoardVO" parameterType="int">
	 	SELECT no, name, subject, content, TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI:SS') as dbday, hit, filename, filesize
	 	FROM project_databoard
	 	WHERE no=#{no}
	 </select>
	 
	 <!-- 수정 -->
	 <update id="databoardUpdate" parameterType="DataBoardVO">
	 	UPDATE project_databoard SET
	 	name=#{name}, subject=#{subject}, content=#{content}, filename=#{filename}, filesize=#{filesize}
	 	WHERE no=#{no}
	 </update>
	 
	 <!-- 삭제 -->
	 <select id="databoardGetPassword" resultType="string" parameterType="int">
	 	SELECT pwd FROM project_databoard WHERE no=#{no}
	 </select>
	 <select id="databoardFileInfoData" resultType="DataBoardVO" parameterType="int">
	 	SELECT filename, filesize
	 	FROM project_databoard
	 	WHERE no=#{no}
	 </select>
	 <delete id="databoardDelete" parameterType="int">
	 	DELETE FROM project_databoard
	 	WHERE no=#{no}
	 </delete>	 
	 <delete id="databoardReplyDelete" parameterType="int"> <!-- 게시물 삭제시 댓글 삭제 후 게시물 삭제, 참조 -->
	 	DELETE FROM project_board_reply
	 	WHERE bno=#{no}
	 </delete>
	 
	 <!-- ***동적 쿼리 : 검색 -->
	 <!-- 
	 	${} - 문자열 ''안붙는 애들 => 컬럼, 테이블명
	 	#{} - 문자열 ''붙는 애들 => 값, 일반 데이터
	 	WHERE name=홍길동
	  -->
	  <!-- SELECT 검색 
	 <select id="databoardFindData" resultType="DataBoardVO" parameterType="hashmap">
	 	SELECT no, name, subject, TO_CHAR(regdate, 'YYYY-MM-DD') as dbday, hit
	 	FROM project_databoard
	 	WHERE ${fs} LIKE '%'||#{ss}||'%'
	 </select>
	 -->
	 <select id="databoardFindData" resultType="DataBoardVO" parameterType="hashmap">
	 	SELECT no, name, subject, TO_CHAR(regdate, 'YYYY-MM-DD') as dbday, hit
	 	FROM project_databoard
	 	<!-- 
	 		WHERE
	 		<if test="fs==='N'">
	 			name LIKE ~
	 		</if>
	 		<if test="fs==='S'">
	 			OR subject LIKE ~
	 		</if>
	 		<if test="fs==='C'">
	 			OR content LIKE ~
	 		</if>
	 		체크박스 하나체크시에는 OR 불필요
	 		체크박스 중복체크시 OR 필요
	 	 -->
	 	 WHERE
	 	<trim prefix="(" suffix=")" prefixOverrides="OR"> <!-- prefix,suffix 추가 / prefixOverride 제거 -->
	 	<!--  prefixOverrides="OR" 맨앞에 있는 OR, 접두사 OR 제거 -->
	 		<foreach collection="fsArr" item="fs">
	 			<trim prefix="OR">
	 				<choose>
	 					<when test="fs=='N'.toString()">
	 						name LIKE '%'||#{ss}||'%'
	 					</when>
	 					<when test="fs=='S'.toString()">
	 						subject LIKE '%'||#{ss}||'%'
	 					</when>
	 					<when test="fs=='C'.toString()">
	 						content LIKE '%'||#{ss}||'%'
	 					</when>
	 				</choose>
	 			</trim>
	 		</foreach>
	 	</trim>
	 </select>
</mapper> 